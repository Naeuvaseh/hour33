"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
// this import should be first in order to load some required settings (like globals and reflect-metadata)
var platform_1 = require("nativescript-angular/platform");
var app_module_1 = require("./app.module");
var settings_1 = require("./settings");
// Firebase
var firebase = require("nativescript-plugin-firebase");
// Geolocation
var geolocation = require("nativescript-geolocation");
// Google Places
var GooglePlaces = require("nativescript-plugin-google-places");
// Init Firebase API
firebase.init({
    onAuthStateChanged: function (data) {
        if (settings_1.Debug.console.Firebase.email)
            console.log(data.loggedIn ? "Logged in to firebase: " + data.user.email : "Logged out from firebase");
        if (data.loggedIn && settings_1.Debug.console.Firebase.fullUser) {
            console.log("User Data: " + (JSON.stringify(data)));
        }
    }
}).then(function (instance) {
    console.log("firebase.init done");
}, function (error) {
    console.log("firebase.init error: " + error);
});
// Init Location
geolocation.enableLocationRequest();
// Init Google Places API
// API Key: AIzaSyDbY1JhYKBsuzW80PFMjWa2Pg3QMveBNSM
GooglePlaces.init();
platform_1.platformNativeScriptDynamic().bootstrapModule(app_module_1.AppModule);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1haW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwwR0FBMEc7QUFDMUcsMERBQTRFO0FBQzVFLDJDQUF5QztBQUN6Qyx1Q0FBbUM7QUFDbkMsV0FBVztBQUNYLElBQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDO0FBQ3pELGNBQWM7QUFDZCxzREFBd0Q7QUFFeEQsZ0JBQWdCO0FBQ2hCLGdFQUFrRTtBQUVsRSxvQkFBb0I7QUFDcEIsUUFBUSxDQUFDLElBQUksQ0FBQztJQUNaLGtCQUFrQixFQUFFLFVBQVMsSUFBSTtRQUMvQixFQUFFLENBQUEsQ0FBQyxnQkFBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDO1lBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxHQUFHLHlCQUF5QixHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxHQUFHLDBCQUEwQixDQUFDLENBQUM7UUFDdkksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxnQkFBSyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztZQUNyRCxPQUFPLENBQUMsR0FBRyxDQUFDLGFBQWEsR0FBRyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3RELENBQUM7SUFDSCxDQUFDO0NBQ0YsQ0FBQyxDQUFDLElBQUksQ0FDTCxVQUFBLFFBQVE7SUFDTixPQUFPLENBQUMsR0FBRyxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDcEMsQ0FBQyxFQUNELFVBQUEsS0FBSztJQUNILE9BQU8sQ0FBQyxHQUFHLENBQUMsMEJBQXdCLEtBQU8sQ0FBQyxDQUFDO0FBQy9DLENBQUMsQ0FDRixDQUFDO0FBRUYsZ0JBQWdCO0FBQ2hCLFdBQVcsQ0FBQyxxQkFBcUIsRUFBRSxDQUFDO0FBRXBDLHlCQUF5QjtBQUN6QixtREFBbUQ7QUFDbkQsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO0FBRXBCLHNDQUEyQixFQUFFLENBQUMsZUFBZSxDQUFDLHNCQUFTLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRoaXMgaW1wb3J0IHNob3VsZCBiZSBmaXJzdCBpbiBvcmRlciB0byBsb2FkIHNvbWUgcmVxdWlyZWQgc2V0dGluZ3MgKGxpa2UgZ2xvYmFscyBhbmQgcmVmbGVjdC1tZXRhZGF0YSlcclxuaW1wb3J0IHsgcGxhdGZvcm1OYXRpdmVTY3JpcHREeW5hbWljIH0gZnJvbSBcIm5hdGl2ZXNjcmlwdC1hbmd1bGFyL3BsYXRmb3JtXCI7XHJcbmltcG9ydCB7IEFwcE1vZHVsZSB9IGZyb20gXCIuL2FwcC5tb2R1bGVcIjtcclxuaW1wb3J0IHsgRGVidWcgfSBmcm9tICcuL3NldHRpbmdzJztcclxuLy8gRmlyZWJhc2VcclxuY29uc3QgZmlyZWJhc2UgPSByZXF1aXJlKFwibmF0aXZlc2NyaXB0LXBsdWdpbi1maXJlYmFzZVwiKTtcclxuLy8gR2VvbG9jYXRpb25cclxuaW1wb3J0ICogYXMgZ2VvbG9jYXRpb24gZnJvbSBcIm5hdGl2ZXNjcmlwdC1nZW9sb2NhdGlvblwiO1xyXG5pbXBvcnQgeyBBY2N1cmFjeSB9IGZyb20gXCJ1aS9lbnVtc1wiO1xyXG4vLyBHb29nbGUgUGxhY2VzXHJcbmltcG9ydCAqIGFzIEdvb2dsZVBsYWNlcyBmcm9tICduYXRpdmVzY3JpcHQtcGx1Z2luLWdvb2dsZS1wbGFjZXMnO1xyXG5cclxuLy8gSW5pdCBGaXJlYmFzZSBBUElcclxuZmlyZWJhc2UuaW5pdCh7XHJcbiAgb25BdXRoU3RhdGVDaGFuZ2VkOiBmdW5jdGlvbihkYXRhKSB7IFxyXG4gICAgaWYoRGVidWcuY29uc29sZS5GaXJlYmFzZS5lbWFpbCkgY29uc29sZS5sb2coZGF0YS5sb2dnZWRJbiA/IFwiTG9nZ2VkIGluIHRvIGZpcmViYXNlOiBcIiArIGRhdGEudXNlci5lbWFpbCA6IFwiTG9nZ2VkIG91dCBmcm9tIGZpcmViYXNlXCIpO1xyXG4gICAgaWYgKGRhdGEubG9nZ2VkSW4gJiYgRGVidWcuY29uc29sZS5GaXJlYmFzZS5mdWxsVXNlcikge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIlVzZXIgRGF0YTogXCIgKyAoSlNPTi5zdHJpbmdpZnkoZGF0YSkpKTtcclxuICAgIH1cclxuICB9XHJcbn0pLnRoZW4oXHJcbiAgaW5zdGFuY2UgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJmaXJlYmFzZS5pbml0IGRvbmVcIik7XHJcbiAgfSxcclxuICBlcnJvciA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhgZmlyZWJhc2UuaW5pdCBlcnJvcjogJHtlcnJvcn1gKTtcclxuICB9XHJcbik7XHJcblxyXG4vLyBJbml0IExvY2F0aW9uXHJcbmdlb2xvY2F0aW9uLmVuYWJsZUxvY2F0aW9uUmVxdWVzdCgpO1xyXG5cclxuLy8gSW5pdCBHb29nbGUgUGxhY2VzIEFQSVxyXG4vLyBBUEkgS2V5OiBBSXphU3lEYlkxSmhZS0JzdXpXODBQRk1qV2EyUGczUU12ZUJOU01cclxuR29vZ2xlUGxhY2VzLmluaXQoKTtcclxuXHJcbnBsYXRmb3JtTmF0aXZlU2NyaXB0RHluYW1pYygpLmJvb3RzdHJhcE1vZHVsZShBcHBNb2R1bGUpO1xyXG4iXX0=