{
  "_args": [
    [
      {
        "raw": "nativescript-plugin-google-places",
        "scope": null,
        "escapedName": "nativescript-plugin-google-places",
        "name": "nativescript-plugin-google-places",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\naeuv\\Projects\\Hour 33"
    ]
  ],
  "_from": "nativescript-plugin-google-places@latest",
  "_id": "nativescript-plugin-google-places@1.4.1",
  "_inCache": true,
  "_location": "/nativescript-plugin-google-places",
  "_nodeVersion": "6.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/nativescript-plugin-google-places-1.4.1.tgz_1506479083252_0.5739940544590354"
  },
  "_npmUser": {
    "name": "tygrinn",
    "email": "tylergrinn@gmail.com"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "nativescript-plugin-google-places",
    "scope": null,
    "escapedName": "nativescript-plugin-google-places",
    "name": "nativescript-plugin-google-places",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/nativescript-plugin-google-places/-/nativescript-plugin-google-places-1.4.1.tgz",
  "_shasum": "17e25762eae69a8629d7955b96efb81d392fafb6",
  "_shrinkwrap": null,
  "_spec": "nativescript-plugin-google-places",
  "_where": "C:\\Users\\naeuv\\Projects\\Hour 33",
  "author": {
    "name": "Tyler Grinn",
    "email": "tylergrinn@gmail.com"
  },
  "bootstrapper": "nativescript-plugin-seed",
  "bugs": {
    "url": "https://github.com/tylergrinn/nativescript-plugin-google-places/issues"
  },
  "dependencies": {},
  "description": "Choose a place using Google Place Picker",
  "devDependencies": {
    "fs-extra": "^4.0.2",
    "fs-promise": "^2.0.3",
    "ncp": "^2.0.0",
    "prompt-lite": "^0.1.1",
    "rimraf": "^2.5.0",
    "tns-core-modules": "^3.1.0",
    "tns-platform-declarations": "^3.1.0",
    "tslint": "^5.0.0",
    "typescript": "~2.3.0",
    "webpack": "^3.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "17e25762eae69a8629d7955b96efb81d392fafb6",
    "tarball": "https://registry.npmjs.org/nativescript-plugin-google-places/-/nativescript-plugin-google-places-1.4.1.tgz"
  },
  "homepage": "https://github.com/tylergrinn/nativescript-plugin-google-places",
  "keywords": [
    "NativeScript",
    "JavaScript",
    "Typescript",
    "Angular",
    "Android",
    "iOS",
    "Google",
    "Places",
    "Maps"
  ],
  "license": "MIT",
  "main": "plugin-google-places",
  "maintainers": [
    {
      "name": "tygrinn",
      "email": "tylergrinn@gmail.com"
    }
  ],
  "name": "nativescript-plugin-google-places",
  "nativescript": {
    "platforms": {
      "android": "3.0.0",
      "ios": "3.0.0"
    }
  },
  "optionalDependencies": {},
  "readme": "ERROR: No README data found!",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/tylergrinn/nativescript-plugin-google-places.git"
  },
  "scripts": {
    "build": "npm i && tsc",
    "build-scripts": "npm install --ignore-scripts && webpack --config scripts/webpack.config.js scripts/installer.js scripts/postinstall.js && webpack --config scripts/webpack.config.js scripts/resetter.js scripts/reset.js",
    "ci.tslint": "npm i && tslint '**/*.ts' --config '../tslint.json' --exclude '**/node_modules/**'",
    "clean": "cd ../demo-ng && rimraf hooks node_modules platforms && cd ../src && rimraf node_modules && npm run plugin.link",
    "configure": "node scripts/reset.js && npm run postinstall",
    "demo.android": "npm i && npm run tsc && cd ./demo-ng && tns run android --syncAllFiles",
    "demo.ios": "npm i && npm run tsc && cd ../demo-ng && tns run ios --syncAllFiles",
    "demo.reset": "cd ../demo-ng && rimraf platforms",
    "plugin.link": "npm link && cd ../demo-ng && npm link nativescript-plugin-google-places && cd ../src",
    "plugin.prepare": "npm run tsc && cd ../demo-ng && tns plugin remove nativescript-plugin-google-places && tns plugin add ../src",
    "plugin.tscwatch": "npm run tsc -- -w",
    "postinstall": "node scripts/postinstall.js",
    "tsc": "tsc -skipLibCheck",
    "tslint": "cd .. && tslint \"**/*.ts\" --config tslint.json --exclude \"**/node_modules/**\""
  },
  "typings": "index.d.ts",
  "version": "1.4.1"
}
